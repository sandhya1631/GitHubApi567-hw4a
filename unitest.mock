import unittest
from unittest.mock import patch, Mock
# Import your module that makes GitHub API calls
from your_module import your_github_function

class TestGitHubAPI(unittest.TestCase):
    
    @patch('your_module.requests.get')  # Path to where requests.get is used in your code
    def test_github_function(self, mock_get):
        # Setup the mock to return a specific response
        mock_response = Mock()
        mock_response.status_code = 200
        # Create sample response data that mimics GitHub API response
        mock_response.json.return_value = {
            "name": "test-repo",
            "owner": {"login": "test-user"},
            # Add other fields your code expects
        }
        mock_get.return_value = mock_response
        
        # Call your function that uses GitHub API
        result = your_github_function("test-user", "test-repo")
        
        # Assert that your function behaves as expected with the mock data
        self.assertEqual(result['name'], "test-repo")
        
        # Verify the mock was called with the expected URL
        mock_get.assert_called_once_with(
            "https://api.github.com/repos/test-user/test-repo", 
            headers={"Accept": "application/vnd.github.v3+json"}
        )
